import { ProcessingMode, RewriteTone, SummaryDetailLevel } from '../app/api/process/route';

/**
 * Represents a single entry in the user's processing history.
 * Each entry captures the complete context of a text processing task,
 * including input, output, and configuration options.
 */
export type SummaryFormat = 'paragraph' | 'bullet-points';
export type TargetAudience = 'general' | 'simple' | 'expert';
export type RewriteGoal = 'maintain-length' | 'make-shorter';

export interface HistoryOptions {
  summaryLengthLevel: SummaryDetailLevel;
  tone: RewriteTone;
  targetAudience: TargetAudience;
  summaryFormat?: SummaryFormat;
  rewriteGoal?: RewriteGoal;
}

export interface HistoryEntry {
  /**
   * A unique identifier for this history entry.
   * Generated using crypto.randomUUID() for guaranteed uniqueness.
   */
  id: string;

  /**
   * The timestamp when the history entry was created.
   * Stored as milliseconds since the Unix epoch (Date.now()).
   * Used for sorting and displaying relative time.
   */
  timestamp: number;

  /**
   * The original text provided by the user for processing.
   * Stored in its entirety to allow for reprocessing if needed.
   */
  inputText: string;

  /**
   * The mode of processing selected ('summarize' or 'rewrite').
   * Determines which options were relevant for this task.
   */
  mode: ProcessingMode;

  /**
   * The configuration options used for this specific processing task.
   * Contains mode-specific properties that were active during processing.
   */
  options: HistoryOptions;

  /**
   * The final text generated by the AI service.
   * This is the processed output that the user received.
   */
  outputText: string;
}

/**
 * Represents the complete history state.
 * An array of HistoryEntry objects, ordered by timestamp.
 */
export type HistoryState = HistoryEntry[];

/**
 * Constants for localStorage key and history management.
 */
export const HISTORY_STORAGE_KEY = 'rewritex_history';

/**
 * Maximum number of history entries to keep.
 * Prevents localStorage from growing too large.
 */
export const MAX_HISTORY_ENTRIES = 50;

// Default values for new options
export const DEFAULT_HISTORY_OPTIONS: HistoryOptions = {
  summaryLengthLevel: 3,
  tone: 'formal',
  targetAudience: 'general',
  summaryFormat: 'paragraph',
  rewriteGoal: 'maintain-length'
}; 